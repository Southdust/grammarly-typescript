#!/usr/bin/env bash

# Creates a new package within the root library.
# This script is licensed under the MIT license.
# This expects the parent directory to be the root of the grammarly.js repository.
# `jq` and `pnpm` are required to run this script.
# Usage: ./new_package <package_name>

PACKAGE_NAME="$1"

# Check if the package name is provided
if [ -z "$PACKAGE_NAME" ]; then
    echo "Usage: $0 <package_name>"
    exit 1
fi

# Check if the package name is valid (only contains lowercase letters, numbers, dashes and dots).
if ! [[ "$PACKAGE_NAME" =~ ^[a-z0-9.-]+$ ]]; then
    echo "Invalid package name: $PACKAGE_NAME."
    exit 1
fi

# Check if the package already exists
if [ -d "$PWD/packages/$PACKAGE_NAME" ]; then
    echo "[!] Package already exists: $PACKAGE_NAME."
    exit 1
fi

# Check if `jq` is installed
if ! command -v jq &> /dev/null; then
    echo "[!] jq is required to run this script."
    exit 1
fi

# Check if `pnpm` is installed
if ! command -v pnpm &> /dev/null; then
    echo "[!] pnpm is required to run this script."
    exit 1
fi

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd ) 
cd "$SCRIPT_DIR"/..

mkdir packages/"$PACKAGE_NAME"
mkdir packages/"$PACKAGE_NAME"/test
mkdir packages/"$PACKAGE_NAME"/src
mkdir -p packages/"$PACKAGE_NAME"/dist/ejs
mkdir packages/"$PACKAGE_NAME"/dist/esm
touch packages/"$PACKAGE_NAME"/src/index.ts

DESCRIPTION="$(jq -r '.description' package.json)"
REPOSITORY="$(jq -r '.repository' package.json)"
BUGS="$(jq -r '.bugs' package.json)"
CONTRIBUTORS="$(jq -r '.contributors' package.json)"
HOMEPAGE="$(jq -r '.homepage' package.json)"
KEYWORDS="$(jq -r '.keywords' package.json)"

echo'{
    "extends": "../../tsconfig.base.json",
    "include": ["src"]
}' >> packages/"$PACKAGE_NAME"/tsconfig.json
echo "{
    \"name\": \"$PACKAGE_NAME\",
    \"version\": \"0.1.0\",
    \"description\": \"$DESCRIPTION\",
    \"license\": \"MIT\",
    \"main\": \"dist/cjs/index.js\",
    \"module\": \"dist/esm/index.js\",
    \"types\": \"dist/cjs/index.d.ts\",
    \"files\": [
        \"dist\"
    ],
    \"scripts\": {
        \"test\": \"jest\",
        \"build\": \"pnpm build:cjs && pnpm build:esm\",
        \"build:cjs\": \"tsc --module commonjs --outdir dist/cjs\",
        \"build:esm\": \"tsc --module esnext --outdir dist/esm\",
    },
    \"repository\": $REPOSITORY,
    \"bugs\": $BUGS,
    \"homepage\": \"$HOMEPAGE\",
    \"contributors\": $CONTRIBUTORS,
    \"keywords\": $KEYWORDS
}" >> packages/"$PACKAGE_NAME"/package.json
LINK=("LICENSE" "README.md")
DEV_PACKAGES=(
    "typescript"
    "@types/node"
    "jest" # testing
)
for file in "${LINK[@]}"; do
    ln -s ../../"$file" packages/"$PACKAGE_NAME"/"$file"
done
(cd packages/"$PACKAGE_NAME" && pnpm add -D "${DEV_PACKAGES[@]}")
echo "Package 'packages/$PACKAGE_NAME' created successfully!"